"Homework 09," you will create an automation test that involves creating a user in the Swagger Petstore API using REST-assured. Below is a sample Java code demonstrating how to write this test.

Step 1: Define the User POJO
First, define a Java class to represent a User as per the Petstore API's requirements.



public class User {
    private long id;
    private String username;
    private String firstName;
    private String lastName;
    private String email;
    private String password;
    private String phone;
    private int userStatus;

    // Constructors
    public User() { }

    public User(long id, String username, String firstName, String lastName, String email, String password, String phone, int userStatus) {
        this.id = id;
        this.username = username;
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
        this.password = password;
        this.phone = phone;
        this.userStatus = userStatus;
    }

    // Getters and Setters
    public long getId() {
        return id;
    }

    public void setId(long id) {
        this.id = id;
    }

    public String getUsername() {
        return username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getPhone() {
        return phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    public int getUserStatus() {
        return userStatus;
    }

    public void setUserStatus(int userStatus) {
        this.userStatus = userStatus;
    }
}

Step 2: Write the Create User Test
Next, implement the test to create a user using REST-assured.


import io.restassured.RestAssured;
import io.restassured.http.ContentType;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;

import static io.restassured.RestAssured.*;
import static org.hamcrest.Matchers.*;

public class CreateUserTest {

    @BeforeAll
    public static void setup() {
        RestAssured.baseURI = "https://petstore.swagger.io/v2";
    }

    @Test
    public void testCreateUser() {
        User newUser = new User(1, "johnDoe", "John", "Doe", "john.doe@example.com", "password123", "1234567890", 1);

        given()
            .contentType(ContentType.JSON)
            .body(newUser)
        .when()
            .post("/user")
        .then()
            .statusCode(200)
            .body("message", equalTo(String.valueOf(newUser.getId())));
    }
}

Explanation:
Setup: Set the base URI to the Swagger Petstore.
User Object: Create a User instance to represent the new user.
Send Request: Use REST-assured to send a POST request with the user object as JSON.
Assertions: Verify that the API returns a status code of 200 and check that the response message contains the user's ID.
